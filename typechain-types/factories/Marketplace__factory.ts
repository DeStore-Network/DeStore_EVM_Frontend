/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Marketplace, MarketplaceInterface } from "../Marketplace";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "itemId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
    ],
    name: "MarketItemBuy",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "itemId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "MarketItemCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "itemId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "MarketItemSell",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "itemId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
    ],
    name: "MarketItemSend",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "itemId",
        type: "uint256",
      },
    ],
    name: "createMarketBuy",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "createMarketItem",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "itemId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "createMarketSell",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "itemId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "createMarketSend",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllBuyMarketItems",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "itemId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isSold",
            type: "bool",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "owner",
            type: "address",
          },
          {
            internalType: "address",
            name: "nftContract",
            type: "address",
          },
        ],
        internalType: "struct Marketplace.MarketItem[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllMarketItems",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "itemId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isSold",
            type: "bool",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "owner",
            type: "address",
          },
          {
            internalType: "address",
            name: "nftContract",
            type: "address",
          },
        ],
        internalType: "struct Marketplace.MarketItem[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getListingCommision",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "MyAddress",
        type: "address",
      },
    ],
    name: "getMyNFTs",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "itemId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isSold",
            type: "bool",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "owner",
            type: "address",
          },
          {
            internalType: "address",
            name: "nftContract",
            type: "address",
          },
        ],
        internalType: "struct Marketplace.MarketItem[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "itemId",
        type: "uint256",
      },
    ],
    name: "getNFT",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "itemId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isSold",
            type: "bool",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "owner",
            type: "address",
          },
          {
            internalType: "address",
            name: "nftContract",
            type: "address",
          },
        ],
        internalType: "struct Marketplace.MarketItem",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405266470de4df82000060045534801561001b57600080fd5b50600160008190555033600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550612036806100746000396000f3fe6080604052600436106100865760003560e01c80639ec16e39116100595780639ec16e391461012b578063a5e331fe14610147578063a88b4a8914610172578063e921ee6e1461018e578063f16d376c146101cb57610086565b80634cf036e21461008b578063576f7ea7146100a757806358eb2df5146100e45780636a8b52ae14610100575b600080fd5b6100a560048036038101906100a09190611779565b6101f6565b005b3480156100b357600080fd5b506100ce60048036038101906100c991906117cc565b6103f2565b6040516100db91906118e1565b60405180910390f35b6100fe60048036038101906100f991906118fc565b6105cb565b005b34801561010c57600080fd5b506101156108b2565b604051610122919061195e565b60405180910390f35b610145600480360381019061014091906118fc565b6108bc565b005b34801561015357600080fd5b5061015c610b6b565b6040516101699190611ab6565b60405180910390f35b61018c60048036038101906101879190611ad8565b610df5565b005b34801561019a57600080fd5b506101b560048036038101906101b09190611b18565b6110b8565b6040516101c29190611ab6565b60405180910390f35b3480156101d757600080fd5b506101e0611402565b6040516101ed9190611ab6565b60405180910390f35b6002600054141561023c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023390611ba2565b60405180910390fd5b60026000819055506000600560008481526020019081526020016000209050828160000154146102a1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161029890611c0e565b60405180910390fd5b8373ffffffffffffffffffffffffffffffffffffffff166342842e0e308484600101546040518463ffffffff1660e01b81526004016102e293929190611c3d565b600060405180830381600087803b1580156102fc57600080fd5b505af1158015610310573d6000803e3d6000fd5b5050505060018160030160006101000a81548160ff021916908315150217905550818160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008160020181905550610388600261163b565b8373ffffffffffffffffffffffffffffffffffffffff168160010154847febad099b8bb23dd3a2da1bc7ffce1bbfe86670067d9dd141d428498c99b98dbd846002015433876040516103dc93929190611c74565b60405180910390a4506001600081905550505050565b6103fa61165f565b60006104066001611651565b905061041061165f565b60005b828110156105c057846005600060018461042d9190611cda565b81526020019081526020016000206000015414156105ad57600560006001836104569190611cda565b81526020019081526020016000206040518060e00160405290816000820154815260200160018201548152602001600282015481526020016003820160009054906101000a900460ff161515151581526020016003820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016005820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505091505b80806105b890611d30565b915050610413565b508092505050919050565b60026000541415610611576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060890611ba2565b60405180910390fd5b600260008190555060008082141561062857600190505b610632600161163b565b600061063e6001611651565b90506040518060e0016040528082815260200185815260200184815260200183151581526020013373ffffffffffffffffffffffffffffffffffffffff1681526020013373ffffffffffffffffffffffffffffffffffffffff1681526020018673ffffffffffffffffffffffffffffffffffffffff168152506005600083815260200190815260200160002060008201518160000155602082015181600101556040820151816002015560608201518160030160006101000a81548160ff02191690831515021790555060808201518160030160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060a08201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060c08201518160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050508473ffffffffffffffffffffffffffffffffffffffff166323b872dd3330876040518463ffffffff1660e01b815260040161081d93929190611c3d565b600060405180830381600087803b15801561083757600080fd5b505af115801561084b573d6000803e3d6000fd5b505050508473ffffffffffffffffffffffffffffffffffffffff1684827f9647d2e9a23c1809a0461ae22d7688427bce1e7e0b92d0cb92b0e7f4dd72dd9c86333360405161089b93929190611c74565b60405180910390a450506001600081905550505050565b6000600454905090565b60026000541415610902576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108f990611ba2565b60405180910390fd5b600260008190555066038d7ea4c680008111610953576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161094a90611deb565b60405180910390fd5b600061095e836103f2565b90506040518060e00160405280848152602001826020015181526020018381526020016000151581526020013373ffffffffffffffffffffffffffffffffffffffff1681526020013373ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff168152506005600085815260200190815260200160002060008201518160000155602082015181600101556040820151816002015560608201518160030160006101000a81548160ff02191690831515021790555060808201518160030160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060a08201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060c08201518160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050508373ffffffffffffffffffffffffffffffffffffffff168160200151847f699d0232d9fbd887c8eae26af9108ffd4f78e5e75790bec568cb8bdf21d8dc32853333604051610b5593929190611c74565b60405180910390a4506001600081905550505050565b60606000610b796002611651565b610b836001611651565b610b8d9190611e0b565b905060008167ffffffffffffffff811115610bab57610baa611e3f565b5b604051908082528060200260200182016040528015610be457816020015b610bd161165f565b815260200190600190039081610bc95790505b5090506000805b83811015610deb576000151560056000600184610c089190611cda565b815260200190815260200160002060030160009054906101000a900460ff1615151415610dd8576005600060056000600185610c449190611cda565b81526020019081526020016000206000015481526020019081526020016000206040518060e00160405290816000820154815260200160018201548152602001600282015481526020016003820160009054906101000a900460ff161515151581526020016003820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016005820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050838381518110610dbd57610dbc611e6e565b5b6020026020010181905250600182610dd59190611cda565b91505b8080610de390611d30565b915050610beb565b5081935050505090565b60026000541415610e3b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e3290611ba2565b60405180910390fd5b6002600081905550600060056000838152602001908152602001600020905080600201543414610ea0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e9790611f0f565b60405180910390fd5b81816000015414610ee6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610edd90611c0e565b60405180910390fd5b8060030160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f19350505050158015610f50573d6000803e3d6000fd5b508273ffffffffffffffffffffffffffffffffffffffff166342842e0e303384600101546040518463ffffffff1660e01b8152600401610f9293929190611c3d565b600060405180830381600087803b158015610fac57600080fd5b505af1158015610fc0573d6000803e3d6000fd5b5050505060018160030160006101000a81548160ff021916908315150217905550338160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061102e600261163b565b8273ffffffffffffffffffffffffffffffffffffffff168160010154837fc2e0134e32adce48747c2b66ec0bacd350c7374e959b6056c91bab4dca43ae1b60008560030160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16336040516110a393929190611fc9565b60405180910390a45060016000819055505050565b606060006110c66001611651565b905060008060005b8381101561116f578573ffffffffffffffffffffffffffffffffffffffff16600560006001846110fe9190611cda565b815260200190815260200160002060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561115c576001836111599190611cda565b92505b808061116790611d30565b9150506110ce565b5060008267ffffffffffffffff81111561118c5761118b611e3f565b5b6040519080825280602002602001820160405280156111c557816020015b6111b261165f565b8152602001906001900390816111aa5790505b50905060005b848110156113f5578673ffffffffffffffffffffffffffffffffffffffff16600560006001846111fb9190611cda565b815260200190815260200160002060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156113e25760006001826112589190611cda565b9050600560008281526020019081526020016000206040518060e00160405290816000820154815260200160018201548152602001600282015481526020016003820160009054906101000a900460ff161515151581526020016003820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016005820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250508385815181106113c6576113c5611e6e565b5b60200260200101819052506001846113de9190611cda565b9350505b80806113ed90611d30565b9150506111cb565b5080945050505050919050565b606060006114106001611651565b905060008167ffffffffffffffff81111561142e5761142d611e3f565b5b60405190808252806020026020018201604052801561146757816020015b61145461165f565b81526020019060019003908161144c5790505b5090506000805b8381101561163157600560006005600060018561148b9190611cda565b81526020019081526020016000206000015481526020019081526020016000206040518060e00160405290816000820154815260200160018201548152602001600282015481526020016003820160009054906101000a900460ff161515151581526020016003820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016005820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505083838151811061160457611603611e6e565b5b602002602001018190525060018261161c9190611cda565b9150808061162990611d30565b91505061146e565b5081935050505090565b6001816000016000828254019250508190555050565b600081600001549050919050565b6040518060e00160405280600081526020016000815260200160008152602001600015158152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611710826116e5565b9050919050565b61172081611705565b811461172b57600080fd5b50565b60008135905061173d81611717565b92915050565b6000819050919050565b61175681611743565b811461176157600080fd5b50565b6000813590506117738161174d565b92915050565b600080600060608486031215611792576117916116e0565b5b60006117a08682870161172e565b93505060206117b186828701611764565b92505060406117c28682870161172e565b9150509250925092565b6000602082840312156117e2576117e16116e0565b5b60006117f084828501611764565b91505092915050565b61180281611743565b82525050565b60008115159050919050565b61181d81611808565b82525050565b600061182e826116e5565b9050919050565b61183e81611823565b82525050565b61184d81611705565b82525050565b60e08201600082015161186960008501826117f9565b50602082015161187c60208501826117f9565b50604082015161188f60408501826117f9565b5060608201516118a26060850182611814565b5060808201516118b56080850182611835565b5060a08201516118c860a0850182611835565b5060c08201516118db60c0850182611844565b50505050565b600060e0820190506118f66000830184611853565b92915050565b600080600060608486031215611915576119146116e0565b5b60006119238682870161172e565b935050602061193486828701611764565b925050604061194586828701611764565b9150509250925092565b61195881611743565b82525050565b6000602082019050611973600083018461194f565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60e0820160008201516119bb60008501826117f9565b5060208201516119ce60208501826117f9565b5060408201516119e160408501826117f9565b5060608201516119f46060850182611814565b506080820151611a076080850182611835565b5060a0820151611a1a60a0850182611835565b5060c0820151611a2d60c0850182611844565b50505050565b6000611a3f83836119a5565b60e08301905092915050565b6000602082019050919050565b6000611a6382611979565b611a6d8185611984565b9350611a7883611995565b8060005b83811015611aa9578151611a908882611a33565b9750611a9b83611a4b565b925050600181019050611a7c565b5085935050505092915050565b60006020820190508181036000830152611ad08184611a58565b905092915050565b60008060408385031215611aef57611aee6116e0565b5b6000611afd8582860161172e565b9250506020611b0e85828601611764565b9150509250929050565b600060208284031215611b2e57611b2d6116e0565b5b6000611b3c8482850161172e565b91505092915050565b600082825260208201905092915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000611b8c601f83611b45565b9150611b9782611b56565b602082019050919050565b60006020820190508181036000830152611bbb81611b7f565b9050919050565b7f54686973206974656d20646f6573206e6f742065786973740000000000000000600082015250565b6000611bf8601883611b45565b9150611c0382611bc2565b602082019050919050565b60006020820190508181036000830152611c2781611beb565b9050919050565b611c3781611705565b82525050565b6000606082019050611c526000830186611c2e565b611c5f6020830185611c2e565b611c6c604083018461194f565b949350505050565b6000606082019050611c89600083018661194f565b611c966020830185611c2e565b611ca36040830184611c2e565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611ce582611743565b9150611cf083611743565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611d2557611d24611cab565b5b828201905092915050565b6000611d3b82611743565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611d6e57611d6d611cab565b5b600182019050919050565b7f4c697374696e672070726963652073686f756c64206265206174206c6561737460008201527f20302e3030310000000000000000000000000000000000000000000000000000602082015250565b6000611dd5602683611b45565b9150611de082611d79565b604082019050919050565b60006020820190508181036000830152611e0481611dc8565b9050919050565b6000611e1682611743565b9150611e2183611743565b925082821015611e3457611e33611cab565b5b828203905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f50726963652073686f756c6420626520657175616c20746f206974656d20707260008201527f6963650000000000000000000000000000000000000000000000000000000000602082015250565b6000611ef9602383611b45565b9150611f0482611e9d565b604082019050919050565b60006020820190508181036000830152611f2881611eec565b9050919050565b6000819050919050565b6000819050919050565b6000611f5e611f59611f5484611f2f565b611f39565b611743565b9050919050565b611f6e81611f43565b82525050565b6000611f8f611f8a611f85846116e5565b611f39565b6116e5565b9050919050565b6000611fa182611f74565b9050919050565b6000611fb382611f96565b9050919050565b611fc381611fa8565b82525050565b6000606082019050611fde6000830186611f65565b611feb6020830185611fba565b611ff86040830184611c2e565b94935050505056fea26469706673582212203566b6985ad8a9f3fd7bf412d952e6552327831a744d5c080164138a1ee6486864736f6c63430008090033";

type MarketplaceConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MarketplaceConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Marketplace__factory extends ContractFactory {
  constructor(...args: MarketplaceConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Marketplace> {
    return super.deploy(overrides || {}) as Promise<Marketplace>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Marketplace {
    return super.attach(address) as Marketplace;
  }
  connect(signer: Signer): Marketplace__factory {
    return super.connect(signer) as Marketplace__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MarketplaceInterface {
    return new utils.Interface(_abi) as MarketplaceInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Marketplace {
    return new Contract(address, _abi, signerOrProvider) as Marketplace;
  }
}
